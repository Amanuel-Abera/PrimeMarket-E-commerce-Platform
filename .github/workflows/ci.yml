name: Continuous Integration Workflow

on:
  push:
    branches:
      - main

jobs:
  test:
    name: 'Run Tests'
    runs-on: ubuntu-latest

    env:
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      VERCEL_TEAM_ID: ${{ secrets.VERCEL_TEAM_ID }}
      RENDER_API_TOKEN: ${{ secrets.RENDER_API_TOKEN }}
      RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
      CLOUDINARY_API_KEY: ${{ secrets.CLOUDINARY_API_KEY }}
      CLOUDINARY_API_SECRET: ${{ secrets.CLOUDINARY_API_SECRET }}
      CLOUDINARY_CLOUD_NAME: ${{ secrets.CLOUDINARY_CLOUD_NAME }}
      MONGO_URL_PROD: ${{ secrets.MONGO_URL_PROD }}
      ACCESS_TOKEN_SECRET: ${{ secrets.ACCESS_TOKEN_SECRET }}
      REFRESH_TOKEN_SECRET: ${{ secrets.REFRESH_TOKEN_SECRET }}
      TEST_DB: ${{ secrets.TEST_DB }}

    steps:
      - name: 'Checkout Repository'
        uses: actions/checkout@v2

      - name: 'Install Node.js'
        uses: actions/setup-node@v3
        with:
          node-version: 20.11.1

      - name: 'Install Dependencies & Test Frontend'
        working-directory: ./client
        run: |
          npm install
          npm test

      - name: 'Install Dependencies & Test Backend'
        working-directory: ./server
        run: |
          npm install
          npm test

      - name: 'Install wait-on'
        run: npm install -g wait-on

      - name: 'Start Backend and Frontend'
        run: |
          (cd ./server && npm start) &
          (cd ./client && npm run dev) &
      
      # - name: 'Wait for Services'
      #   run: |
      #     wait-on http://localhost:5000 http://localhost:5173

      - name: 'Run End-to-End Tests'
        run: npx cypress run
